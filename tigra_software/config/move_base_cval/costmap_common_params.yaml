# always_send_full_costmap: true

# footprint: [[0.8, 0.4], [-0.2, 0.4], [-0.2, -0.4], [0.8, -0.4]]
# obstacle_range: 10.0
# raytrace_range: 8.5

static_layer:
  # unknown_cost_value: -1
  # lethal_cost_threshold: 100
  # first_map_only: false
  # track_unknown_space: false
  # use_maximum: true
  # trinary_costmap: true
  # marking: false
  # clearing: true
  map_topic: /rtabmap/grid_map
  subscribe_to_updates: false


inflation_layer:
  inflation_radius: 1.0 # the bigger the better, defines where the gradient is
  cost_scaling_factor: 0.5 # 0.5 the bigger the steeper the gradient is


rs_rear_obstacle_layer:
  enabled:               true
  voxel_decay:           2     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.1   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        5    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:   rgbd1_clear rgbd1_mark
  rgbd1_mark:
    data_type: PointCloud2
    topic: /rs_camera_rear/depth/color/points
    marking: true
    clearing: false
    min_obstacle_height: 0.3     #default 0, meters
    max_obstacle_height: 0.6     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
    filter: "voxel"              #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
  rgbd1_clear:
    enabled: true                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /rs_camera_rear/depth/color/points
    marking: false
    clearing: true
    filters: "voxel"
    min_z: 0.1                   #default 0, meters
    max_z: 7.0                   #default 10, meters
    vertical_fov_angle: 0.7      #default 0.7, radians
    horizontal_fov_angle: 1.04   #default 1.04, radians
    decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar


lidar_obstacle_layer_close:
        # plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled:                  true
        voxel_decay:              10.0  # seconds if linear, e^n if exponential
        decay_model:              0     # 0=linear, 1=exponential, -1=persistent
        voxel_size:               0.2  # meters
        track_unknown_space:      true  # default space is known
        mark_threshold:           0     # voxel height
        update_footprint_enabled: true
        combination_method:       1     # 1=max, 0=override
        origin_z:                 0.0   # meters
        publish_voxel_map:        true # default off
        transform_tolerance:      0.2   # seconds
        mapping_mode:             false # default off, saves map not for navigation
        map_save_duration:        60.0  # default 60s, how often to autosave
        observation_sources:      rgbd1_mark rgbd1_clear
        rgbd1_mark:
          data_type: PointCloud2
          topic: /lslidar_point_cloud/filtered
          marking: true
          clearing: false
          obstacle_range: 15.0          # meters
          min_obstacle_height: 0.6   # default 0, meters
          max_obstacle_height: 1.5     # default 3, meters
          expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
          observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
          inf_is_valid: false          # default false, for laser scans
          filter: "voxel"        # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on     voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
          voxel_min_points: 5  
          clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
        rgbd1_clear:
          enabled: true                #default true, can be toggled on/off with associated service call
          data_type: PointCloud2
          topic: /lslidar_point_cloud/filtered
          marking: false
          clearing: true
          max_z: 8.0                  # default 0, meters
          min_z: 0.0                  # default 10, meters
          vertical_fov_angle: 0.523   # default 0.7, radians. For 3D lidars it's the symmetric FOV abo ut the planar axis.
          vertical_fov_padding: 0.05    # 3D Lidar only. Default 0, in meters 
          horizontal_fov_angle: 3.15  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
          decay_acceleration: 5.0     # default 0, 1/s^2. 
          model_type: 1               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar

lidar_obstacle_layer_far:
        # plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled:                  true
        voxel_decay:              10.0  # seconds if linear, e^n if exponential
        decay_model:              0     # 0=linear, 1=exponential, -1=persistent
        voxel_size:               0.2  # meters
        track_unknown_space:      true  # default space is known
        mark_threshold:           0     # voxel height
        update_footprint_enabled: true
        combination_method:       1     # 1=max, 0=override
        origin_z:                 0.0   # meters
        publish_voxel_map:        true # default off
        transform_tolerance:      0.2   # seconds
        mapping_mode:             false # default off, saves map not for navigation
        map_save_duration:        60.0  # default 60s, how often to autosave
        observation_sources:      rgbd1_mark rgbd1_clear
        rgbd1_mark:
          data_type: PointCloud2
          topic: /lslidar_point_cloud/filtered
          marking: true
          clearing: false
          obstacle_range: 30.0          # meters
          min_obstacle_height: 1.1   # default 0, meters
          max_obstacle_height: 3.0     # default 3, meters
          expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
          observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
          inf_is_valid: false          # default false, for laser scans
          filter: "voxel"        # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on     voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
          voxel_min_points: 5  
          clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
        rgbd1_clear:
          enabled: true                #default true, can be toggled on/off with associated service call
          data_type: PointCloud2
          topic: /lslidar_point_cloud/filtered
          marking: false
          clearing: true
          max_z: 8.0                  # default 0, meters
          min_z: 0.0                  # default 10, meters
          vertical_fov_angle: 0.523   # default 0.7, radians. For 3D lidars it's the symmetric FOV abo ut the planar axis.
          vertical_fov_padding: 0.05    # 3D Lidar only. Default 0, in meters 
          horizontal_fov_angle: 3.15  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
          decay_acceleration: 5.0     # default 0, 1/s^2. 
          model_type: 1               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar



rs_st_obstacle_layer:
  enabled:               true
  voxel_decay:           2     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.1   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        5    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:   rgbd1_clear rgbd1_mark
  rgbd1_mark:
    data_type: PointCloud2
    topic: /rs_camera/depth/color/points
    marking: true
    clearing: false
    min_obstacle_height: 0.3     #default 0, meters
    max_obstacle_height: 1.5     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
    filter: "voxel"              #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
  rgbd1_clear:
    enabled: true                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /rs_camera/depth/color/points
    marking: false
    clearing: true
    filters: "voxel"
    min_z: 0.1                   #default 0, meters
    max_z: 7.0                   #default 10, meters
    vertical_fov_angle: 0.7      #default 0.7, radians
    horizontal_fov_angle: 1.04   #default 1.04, radians
    decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar

# -----archival layers-----------------------

# laser_obstacle_layer:
#     observation_sources: laser_scan
#     track_unknown_space: true
#     footprint_clearing_enabled: true
#     combination_method: 1  # 0 - overwrite, 1 - max, 99 - nothing

#     laser_scan:
#         sensor_frame: hokuyo
#         data_type: LaserScan
#         topic: /tigra_description/laser/scan
#         marking: true
#         clearing: true
#         obstacle_range: 10.
#         raytrace_range: 12.
#         inf_is_valid: true

head_stereo_obstacle_layer:
  # https://github.com/SteveMacenski/spatio_temporal_voxel_layer/issues/129
  observation_sources: point_cloud_sensor
  track_unknown_space: true

  point_cloud_sensor:
    data_type: PointCloud2
    topic: /head_stereo/points2
    marking: true
    clearing: true
    expected_update_rate: 0
    min_obstacle_height: 0.6 #0.3    # default 0, meters
    max_obstacle_height: 2.5 #3.0     # default 3, meters

    observation_persistence: 0.0

back_cam_elp_obstacle_layer:
  enabled:               true
  voxel_decay:           1     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        5.0    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:   rgbd1_clear rgbd1_mark
  rgbd1_mark:
    data_type: PointCloud2
    topic: /elp_camera/points2
    marking: true
    clearing: false
    min_obstacle_height: 0.3     #default 0, meters
    max_obstacle_height: 2.0     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
    filter: "voxel"              #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
  rgbd1_clear:
    enabled: true                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /elp_camera/points2
    marking: false
    clearing: true
    min_z: 0.1                   #default 0, meters
    max_z: 7.0                   #default 10, meters
    vertical_fov_angle: 0.7      #default 0.7, radians
    horizontal_fov_angle: 1.04   #default 1.04, radians
    decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar

depth_obstacle_layer:
  # https://github.com/SteveMacenski/spatio_temporal_voxel_layer/issues/129
  observation_sources: point_cloud_sensor
  track_unknown_space: true

  point_cloud_sensor:
    data_type: PointCloud2
    topic: /rs_camera/depth/color/points
    marking: true
    clear: true
    expected_update_rate: 0
    min_obstacle_height: 0.6    # default 0, meters
    max_obstacle_height: 3.0     # default 3, meters

    observation_persistence: 0.0

