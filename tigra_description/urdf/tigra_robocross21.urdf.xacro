<?xml version="1.0"?>
<robot name="tigra" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find tigra_description)/urdf/tigra.urdf.xacro" />

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="${imu_length} 0.2 ${imu_height}" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="${imu_length} 0.2 ${imu_height}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="base_imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link" />
    <origin xyz="${body_length/2-imu_length/2} 0 ${body_heigth/2+imu_height/2}" rpy="0 0 0" />
  </joint>

  <gazebo reference="imu_link">
    <material>Gazebo/Red</material>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>$(arg robot_name)/imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>20.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- GPS -->
  <joint name="base_gps_joint" type="fixed">
    <parent link="base_link" />
    <child link="gps_link" />
    <origin xyz="0 0 ${body_heigth/2+imu_height/2}" rpy="0 0 0" />
  </joint>

  <link name="gps_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.2 0.2 ${gps_height}" />
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.2 0.2 ${gps_height}" />
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <gazebo reference="gps_link">
    <material>Gazebo/Orange</material>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_gps" filename="libhector_gazebo_ros_gps.so">
      <updateRate>4.0</updateRate>
      <bodyName>gps_link</bodyName>
      <frameId>gps_link</frameId>
      <topicName>/gps/fix</topicName>
      <velocityTopicName>/gps/fix_velocity</velocityTopicName>
      <referenceLatitude>-30.06022459407145675</referenceLatitude>
      <referenceLongitude>-51.173913575780311191</referenceLongitude>
      <referenceHeading>90</referenceHeading>
      <referenceAltitude>10</referenceAltitude>
      <offset>0 0 0</offset>
      <drift>0.001 0.001 0.001</drift>
      <gaussianNoise>0.05 0.05 0.05</gaussianNoise>
      <velocityDrift>0.001 0.001 0.001</velocityDrift>
      <velocityGaussianNoise>0.5 0.5 0.5</velocityGaussianNoise>
    </plugin>
    <!-- for publish ground_truth/state-->
     <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>

  <!-- Depth sensor - emulation of Intel RealSense D435 -->
  <joint name="base_rs_camera_joint" type="fixed">
    <parent link="base_link" />
    <child link="rs_camera_link" />
    <origin xyz="${body_length/2} 0 ${body_heigth/2+0.1}" rpy="0 0 0" />
  </joint>

  <link name="rs_camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.2 0.02" />
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.2 0.02" />
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <gazebo reference="rs_camera_link">
    <material>Gazebo/Black</material>
    <sensor name="rs_camera_link_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.3962634016</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
        <cameraName>rs_camera</cameraName>
        <imageTopicName>/rs_camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/rs_camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/rs_camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/rs_camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/rs_camera/depth/color/points</pointCloudTopicName>
        <frameName>rs_camera_optical_frame</frameName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>15</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

</robot>
