<launch>
<!-- TF pepelac high is 0.8-->

  <arg name="localization" default="true"/>
  <arg name="rtabmap_viz"   default="true"/>
  <arg name="database_path" default="$(find tigra_maps)/3d_maps/new_map.db"/>

  <arg name="rtabmap"      default="true"/>
  <arg name="rgbd_odom" default="true" />

  <arg name="camera"       default="true"/>
  <arg name="lidar3d"      default="true"/>
  <arg name="lidar3d_ray_tracing" default="true"/>
  <arg name="slam2d"       default="true"/>
  <arg name="depth_from_lidar" default="false"/>

  <arg     if="$(arg lidar3d)" name="cell_size" default="0.2"/> <!--default 0.3-->
  <arg unless="$(arg lidar3d)" name="cell_size" default="0.05"/>

  <!-- sensor names -->
  <arg name="lidar_name" default="front_lslidar_c16_lidar" />
  <arg name="camera_name" default="front_rs_d455_camera" />

  <!-- INPUTS -->
  <arg name="rgb_topic" default="/$(arg camera_name)/color/image_raw" />
  <arg name="depth_topic" default="/$(arg camera_name)/aligned_depth_to_color/image_raw" />
  <arg name="camera_info_topic" default="/$(arg camera_name)/color/camera_info" />
  <arg name="imu_topic"       default="/$(arg camera_name)/imu"/>
  <arg name="frame_id"        default="base_footprint"/> 

  <arg if="$(arg lidar3d)" name="lidar_args" default="
      --Reg/Strategy 1 
      --RGBD/NeighborLinkRefining true 
      --ICP/PM true 
      --Icp/PMOutlierRatio 0.7 
      --Icp/VoxelSize $(arg cell_size) 
      --Icp/MaxCorrespondenceDistance 1 
      --Icp/PointToPlaneGroundNormalsUp 0.9 
      --Icp/Iterations 10 
      --Icp/Epsilon 0.001 
      --OdomF2M/ScanSubtractRadius $(arg cell_size) 
      --OdomF2M/ScanMaxSize 15000 
      --Grid/ClusterRadius 1 
      --Grid/RangeMax 20 
      --Grid/RayTracing $(arg lidar3d_ray_tracing) 
      --Grid/CellSize $(arg cell_size) 
      --Grid/MaxGroundHeight 0.1
      --Grid/MaxObstacleHeight 1.5
      --Icp/PointToPlaneRadius 0 
      --Icp/PointToPlaneNormalK 10 
      --Icp/MaxTranslation 1

      --Vis/MinInliers 10
      --RGBD/OptimizeMaxError 0
      --RGBD/ProximityPathMaxNeighbors 1
      --Grid/Sensor 0"/>

  <!-- IMU orientation estimation and publish tf accordingly to os_sensor frame -->
  <node pkg="nodelet" type="nodelet" name="imu_nodelet_manager" args="manager">
    <remap from="imu/data_raw" to="$(arg imu_topic)"/>
    <remap from="imu/data" to="$(arg imu_topic)/filtered"/>
  </node>
  <node pkg="nodelet" type="nodelet" name="imu_filter" args="load imu_filter_madgwick/ImuFilterNodelet imu_nodelet_manager">
    <param name="use_mag" value="false"/>
    <param name="world_frame" value="enu"/>
    <param name="publish_tf" value="false"/>
  </node>
  <node pkg="nodelet" type="nodelet" name="imu_to_tf" args="load rtabmap_util/imu_to_tf imu_nodelet_manager">
    <remap from="imu/data" to="$(arg imu_topic)/filtered"/>
    <param name="fixed_frame_id" value="$(arg frame_id)_stabilized"/>
    <param name="base_frame_id" value="$(arg frame_id)"/>
  </node>
    
  <!--- rgbd odom -->
  <group ns="rtabmap">
        <node if="$(arg rgbd_odom)" pkg="rtabmap_odom" type="rgbd_odometry" name="visual_odometry" output="log">

            <!-- http://wiki.ros.org/rtabmap_odom -->
            <remap from="imu" to="$(arg imu_topic)/filtered" />
            <remap from="rgb/image" to="$(arg rgb_topic)" />
            <remap from="depth/image" to="$(arg depth_topic)" />
            <remap from="rgb/camera_info" to="$(arg camera_info_topic)" />

            <param name="guess_frame_id"  type="string" value="$(arg frame_id)_stabilized"/>
            <param name="frame_id"        type="string" value="$(arg frame_id)"/>
            <param name="odom_frame_id"   type="string" value="odom"/>
            
            <param name="publish_tf" type="bool" value="true" />
            <param name="wait_for_transform_duration" type="double" value="0.2" />

            <param name="Reg/Force3DoF" type="bool" value="true" />
            <param name="Odom/ResetCountdown" type="string" value="1" />

            <param name="Odom/Strategy"      type="string" value="0"/> <!-- 0=Frame-to-Map, 1=Frame=to=Frame -->
            <param name="Vis/EstimationType" type="string" value="1"/> <!-- 0=3D->3D 1=3D->2D (PnP) -->
            <param name="Vis/MaxDepth"       type="string" value="0"/>
            <param name="Odom/GuessMotion" type="string" value="true"/>
            <param name="Vis/MinInliers"     type="string" value="10"/>
            <param name="OdomF2M/MaxSize"    type="string" value="1000"/>
            <param name="GFTT/MinDistance"   type="string" value="10"/>
            <param name="GFTT/QualityLevel"  type="string" value="0.00001"/>
            <param name="GFTT/QualityLevel"  type="string" value="0.00001"/>

        </node>
    </group>
  <!-- <remap from="/rtabmap/grid_map" to="/map"/> -->
  <include if="$(arg rtabmap)" file="$(find rtabmap_ros)/launch/rtabmap.launch">
    <arg     if="$(arg localization)" name="args" value="--Reg/Force3DoF $(arg slam2d) $(arg lidar_args)" />
    <arg unless="$(arg localization)" name="args" value="--Reg/Force3DoF $(arg slam2d) $(arg lidar_args) -d" /> <!-- create new map -->
    <arg name="database_path"           value="$(arg database_path)"/>
    <arg name="localization"    value="$(arg localization)" />
    <arg name="visual_odometry" value="false" />
    <arg name="approx_sync"     value="$(eval camera or not icp_odometry)" />
    <!-- <arg name="imu_topic"       value="$(arg imu_topic)/filtered" /> -->
    <!-- <arg unless="$(arg icp_odometry)" name="odom_topic" value="/odometry/filtered" /> -->
    <arg name="frame_id"        value="base_footprint" />
    <arg name="rtabmap_viz"      value="$(arg rtabmap_viz)" />
    <arg name="gps_topic"       value="/navsat/fix"/>
    
    <!-- 3D LiDAR -->
    <arg name="subscribe_scan_cloud"  value="$(arg lidar3d)" />
    <arg     if="$(arg lidar3d)" name="scan_cloud_topic" value="/$(arg lidar_name)_point_cloud" />
    <arg unless="$(arg lidar3d)" name="scan_cloud_topic" value="/lidar_point_cloud_not_used" />
    
    <!-- If camera is used -->
    <arg name="depth"             value="$(eval camera and not depth_from_lidar)" />
    <arg name="subscribe_rgb"     value="$(eval camera)" />
    <arg name="rgbd_sync"         value="$(eval camera and not depth_from_lidar)" />
    <arg name="rgb_topic"         value="/$(arg camera_name)/color/image_raw" />
    <arg name="camera_info_topic" value="/$(arg camera_name)/color/camera_info" />
    <arg name="depth_topic"       value="/$(arg camera_name)/aligned_depth_to_color/image_raw" />
    <arg name="approx_rgbd_sync"  value="false" />
    
  </include>

</launch>